[user]
	name = rukurx
	email = rukurx@users.noreply.github.com
[core]
	# 除外設定ファイルパス
	excludesfile = ~/.gitignore_global
	# デフォルトのエディタをVIMにする
	editor = vim
	repositoryformatversion = 0
	# ファイルのパーミッション設定をチックする
	filemode = true
	bare = false
	logallrefupdates = true
	# 大文字小文字区別
	ignorecase = false
	# 日本語のファイル名扱う
	precomposeunicode = true
	# 日本語ファイル名表示(git status等でエスケープ処理しない)
	quotepath = false
[merge]
	ff = false
[alias]
	au = add -u
	amend = commit --amend
	b = branch
	ba = branch -a
	c = commit
	ca = commit -a
	cam = commit -am
	cm = commit -m
	cancel = reset --soft HEAD^ # 直前のcommit取り消し
	cancel-merge = reset --hard HEAD # マージ作業中から、マージ前に戻す
	cancel-push = reset --hard HEAD^ # 直前のpull取り消し
	co = checkout
	cob = checkout -b
	cof = checkout -f
	com = checkout main
	delete-merged-branch = !git branch --merged | egrep -v '^\\*|develop$|main$' | xargs -I % git branch -d % # ローカルのマージ済みブランチ削除
	# delete-merged-branchのショートカット
	dmb = delete-merged-branch
	df = diff
	dfcw = diff --color-words # 単語単位で比較する
	dfstg = diff --staged # addした差分を確認する。"git diff --cached" と同じ
	dfrm = diff remotes/origin/main # ローカルブランチとリモートのmainブランチの差分表示
    dfrc = "!f() { git diff remotes/origin/$(git symbolic-ref --short HEAD); }; f" # 現在のローカルブランチとリモートのブランチの差分表示
	f = fetch
	hist = log --pretty=format:\"%h %ad | %s%d [%an]\" --graph --date=short
	log1 = log --oneline
	# 現在のリポジトリのGithubのWebページを開く
	open = "!f() { REPO_URL=$(git config --get remote.origin.url | sed -e \"s/git@/https:\\/\\//\" -e \"s/com:/com\\//\" -e \"s/\\.git$//\"); open $REPO_URL; }; f"
	# 現在のブランチのGitHubのWebページを開く
	openc = "!f() { REPO_URL=$(git config --get remote.origin.url | sed -e \"s/git@/https:\\/\\//\" -e \"s/com:/com\\//\" -e \"s/\\.git$//\"); BRANCH=$(git symbolic-ref --short HEAD); open $REPO_URL/tree/$BRANCH; }; f"
	pro = pull --rebase origin
	prom = pull --rebase origin main
	puo = push -u origin
	# 現在のブランチを対象にリモートにブランチを作成する
	puoc = "!git push -u origin $(git rev-parse --abbrev-ref HEAD)"
	rename = branch -m
	rabort = rebase --abort
	search-deleted-file = log --diff-filter=D --summary # 過去のコミット履歴で削除したファイルをVimライクに検索
	st = status
	sts = status -s
	sw = switch
	swc = switch -c
	stashall = stash -u # untrackedなファイルも隠してくれる
	unstage = reset HEAD # git add取り消し
	name = config --local user.name # ローカルのユーザ名を設定
	email = config --local user.email # ローカルのEmailを設定
[color]
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = red
	untracked = cyan
[diff]
	compactionHeuristic = true
